apiVersion: teiid.io/v1alpha1
kind: VirtualDatabase
metadata:
  name: postgres-virtual-database
  namespace: teiid
spec:
  replicas: 1
  env:
    - name: SPRING_DATASOURCE_SAMPLEDB_USERNAME
      valueFrom:
        secretKeyRef:
          name: postgresql
          key: database-user
    - name: SPRING_DATASOURCE_SAMPLEDB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgresql
          key: database-password
    - name: SPRING_DATASOURCE_SAMPLEDB_DATABASENAME
      valueFrom:
        secretKeyRef:
          name: postgresql
          key: database-name
    - name: SPRING_DATASOURCE_SAMPLEDB_JDBCURL
      value: 'jdbc:postgresql://postgresql/$(SPRING_DATASOURCE_SAMPLEDB_DATABASENAME)'
  build:
    source:
      ddl: >
        CREATE DATABASE customer OPTIONS (ANNOTATION 'Customer VDB');

        USE DATABASE customer;


        CREATE FOREIGN DATA WRAPPER postgresql;

        CREATE SERVER sampledb TYPE 'NONE' FOREIGN DATA WRAPPER postgresql;


        CREATE SCHEMA accounts SERVER sampledb;

        CREATE VIRTUAL SCHEMA portfolio;


        SET SCHEMA accounts;
        IMPORT FOREIGN SCHEMA public FROM SERVER sampledb INTO accounts
        OPTIONS("importer.useFullSchemaName" 'false');


        SET SCHEMA portfolio;


        CREATE VIEW CustomerZip(id bigint PRIMARY KEY, name string, ssn string,
        zip string) AS
            SELECT c.ID as id, c.NAME as name, c.SSN as ssn, a.ZIP as zip
            FROM accounts.CUSTOMER c LEFT OUTER JOIN accounts.ADDRESS a
            ON c.ID = a.CUSTOMER_ID;        
